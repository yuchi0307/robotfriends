{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","container/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflow","border","height","children","ErrorBoundary","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","console","log","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"oNAiBeA,EAfF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GAE5B,OACC,qBAAKC,UAAU,qDAAf,SAEC,gCACA,qBAAKC,IAAI,OAAOC,IAAG,+BAA0BH,EAA1B,cACnB,6BAAKF,IACL,4BAAIC,UCYQK,EAnBE,SAAC,GAAe,IAAbC,EAAY,EAAZA,OACnB,OACC,8BAECA,EAAOC,KAAI,SAAEC,EAAKC,GAClB,OACE,cAAC,EAAD,CAEDR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHZS,SCOMC,EAfG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAChC,OACC,qBAAKV,UAAY,MAAjB,SACC,uBACAA,UAAY,mCACZW,KAAO,SACPC,YAAc,gBACdC,SAAYH,OCGAI,EAVA,SAACC,GACf,OACA,qBAAKC,MAAO,CAAEC,SAAU,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACEJ,EAAMK,YCkBMC,E,kDApBd,WAAYN,GAAO,IAAD,8BACjB,cAAMA,IACDO,MAAQ,CACZC,UAAU,GAHM,E,qDAOlB,SAAkBC,EAAOC,GACxBC,KAAKC,SAAU,CAAEJ,UAAU,M,oBAG5B,WAIC,OAHGG,KAAKJ,MAAMC,SAGPG,KAAKX,MAAMK,a,GAhBQQ,aC4DbC,G,wDAtDd,aAAc,IAAD,8BACZ,gBAcDC,eAAiB,SAACC,GAEjB,EAAKJ,SAAS,CAAElB,YAAasB,EAAMC,OAAOC,SAf1C,EAAKX,MAAQ,CACblB,OAAQ,GACRK,YAAa,IAEbyB,QAAQC,IAAI,eANA,E,qDASb,WACC,IAAD,OACCC,MAAM,8CAA8CC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAAQF,MAAK,SAAAG,GAAK,OAAI,EAAKb,SAAS,CAAEvB,OAAQoC,OAC5HN,QAAQC,IAAI,uB,oBAWb,WACCD,QAAQC,IAAI,UACZ,MAA8BT,KAAKJ,MAA5BlB,EAAP,EAAOA,OAAQK,EAAf,EAAeA,YAETgC,EAAiBrC,EAAOsC,QAAO,SAAAC,GACpC,OAAOA,EAAM9C,KAAK+C,cAAcC,SAASpC,EAAYmC,kBAEtD,OAAgC,IAA7BlB,KAAKJ,MAAMlB,OAAO0C,OAEb,yCAKN,sBAAK9C,UAAU,KAAf,UACA,oBAAIA,UAAU,KAAd,4BACA,cAAC,EAAD,CAAWU,aAAcgB,KAAKI,iBAE9B,cAAC,EAAD,UACA,cAAC,EAAD,UACE,cAAC,EAAD,CAAU1B,OAAQqC,e,GA5CNb,cCKHmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACR,cAAC,EAAD,IACCC,SAASC,eAAe,SAI1BX,M","file":"static/js/main.d6bd5384.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = ({ name, email, id }) => {\n\t//叫做 destructuring 的東東\n\treturn(\n\t\t<div className='tc bg-light-green dib br3 a3 ma2 grow bw2 shadow-5'>\n\t{/*這個語法叫做 tachyons 可以快速有現成樣式*/}\n\t\t\t<div>\n\t\t\t<img alt='robo' src={`https://robohash.org/${id}?200x200`}/>\n\t\t\t<h2>{name}</h2>\n\t\t\t<p>{email}</p>\n\t\t\t</div>\n\t\t</div>\n\n\t);\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({ robots }) =>{\n\treturn(\n\t\t<div>\n\t\t\t{\n\t\t\trobots.map(( user,i ) => {\n\t\t\treturn(\n\t\t\t\t <Card \n\t\t\t\tkey={i}\n\t\t\t\tid={robots[i].id} \n\t\t\t\tname={robots[i].name} \n\t\t\t\temail={robots[i].email}\n\t\t\t\t/>\n\t\t\t  );\n\t\t\t})\n\t\t}\n  \t\t</div>\n\t);\n}\n\nexport default CardList;","import React from 'react';\n\nconst SearchBox = ({searchfield, searchChange}) => {\n\treturn(\n\t\t<div className = 'pa2'>\n\t\t\t<input \n\t\t\tclassName = 'pa3 ba b--green bg-lightest-blue'\n\t\t\ttype = 'search' \n\t\t\tplaceholder = 'search robots'\n\t\t\tonChange = {searchChange} \n\t\t\t// onChange 本身就是個 html 物件，把他作為一個 property\n\t\t\t// 又因在父層<App />賦予他function功能，所以只要有輸入資料就能執行 function\n\t\t\t/>\n\t\t</div>\t\n\t);\n}\n\nexport default SearchBox;","import React from 'react'\n\nconst Scroll = (props) =>{\n\treturn(\n\t<div style={{ overflow: 'scroll', border: '5px solid black', height: '800px'}}>\n\t\t{props.children}\n\t</div>\n\t)\n\t\n\t\n} \n\nexport default Scroll","import React,{ Component } from 'react';\n\nclass ErrorBoundary extends Component{\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\thasError: false\n\t\t}\n\t}\n\n\tcomponentDidCatch(error, info){\n\t\tthis.setState ({ hasError: true})\n\t}\n\n\trender(){\n\t\tif(this.state.hasError){\n\t\t\t<h1>ooooops!</h1>\n\t\t}\n\t\treturn this.props.children\n\t\t\n\t}\n}\n\nexport default ErrorBoundary","import React, { Component }from 'react';\nimport CardList from '../components/CardList'\nimport SearchBox from '../components/SearchBox'\nimport Scroll from '../components/Scroll'\n// import { robots } from './robots' \nimport ErrorBoundary from '../components/ErrorBoundary'\nimport './App.css';\nclass App extends Component {\n\tconstructor(){\n\t\tsuper()\n\t\tthis.state = {\n\t\trobots: [],\n\t\tsearchfield: ''\n\t\t}\n\t\tconsole.log('constructor'); //理解生命週期\n\t}\n\n\tcomponentDidMount()\n\t{\n\t\tfetch('https://jsonplaceholder.typicode.com/users').then(response => response.json()).then(users => this.setState({ robots: users })) //更新state\n\t\tconsole.log('ComponentDidMount');\n\t}\n\n\tonSearchChange = (event) =>{ //永遠記得用 arrow function \n\t\t//更新satate的寫法，而不用寫成 this.state.searchfield =...\n\t\tthis.setState({ searchfield: event.target.value})\n\t\t\n\t}\n\n\n\n\trender(){\n\t\tconsole.log('render');\n\t\tconst {robots, searchfield} = this.state\n\t\t//讓 card list 即時反應\n\t\tconst filteredRobots = robots.filter(robot=>{\n\t\t\treturn robot.name.toLowerCase().includes(searchfield.toLowerCase())\n\t\t})\n\t\tif(this.state.robots.length === 0)\n\t\t{\n\t\t\treturn <h1>Loading</h1>\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn(\n\t\t\t\t<div className='tc'>\n\t\t\t\t<h1 className='f1'>ROBOTS FRIENDS</h1>\n\t\t\t\t<SearchBox searchChange={this.onSearchChange}/>\n\t\t\t{/*searchChange原本是 prop 在這裡又成了 function*/}\n\t\t\t\t<Scroll>\n\t\t\t\t<ErrorBoundary>\n\t\t  \t\t<CardList robots={filteredRobots} /> \n\t\t  \t\t</ErrorBoundary>\n\t\t  \t\t</Scroll>\n\t\t  \t\t</div>\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\t\n\t\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './container/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n//因為 robots 不如 card component是 default export，所以要{}\nReactDOM.render(\n\t<App />,\n  document.getElementById('root')\n);\n\n\nreportWebVitals();\n"],"sourceRoot":""}